version: "3.8"

services:
  db:
    image: postgres:alpine
    container_name: ${POSTGRES_HOST}
    env_file:
      - .env
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -h ${POSTGRES_HOST} -p 5432"]
      interval: 10s
      timeout: 5s
      retries: 2
    volumes:
      - go-ethereum-db:/var/lib/postgresql/data
    networks:
      - go-ethereum.network

  api:
    build:
      context: .
      dockerfile: build/dockerfile.api
    container_name: go-ethereum-api
    restart: always
    env_file:
      - .env
    ports:
      - ${EXPOSE_API_PORT}:8080
    depends_on:
      db:
        condition: service_healthy
    networks:
      - go-ethereum.network
    command: "./api http"

  indexer:
    build:
      context: .
      dockerfile: build/dockerfile.api
    container_name: go-ethereum-indexer
    restart: always
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - go-ethereum.network
    command: "./api index"

volumes:
  go-ethereum-db:

networks:
  go-ethereum.network:
